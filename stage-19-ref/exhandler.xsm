BRKP
MOV R16, 29560
ADD R16, 1
MOV R16, [R16]
MOV R3, R16
MOV R16, 28672
MOV R17, R3
MUL R17, 16
ADD R16, R17
MOV R4, R16
MOV R16, 30032
MOV R17, R3
MUL R17, 10
ADD R16, R17
MOV R5, R16
MOV R16, 29696
MOV R17, R3
MUL R17, 20
ADD R16, R17
MOV R6, R16
MOV R16, R4
ADD R16, 9
MOV [R16], -1
MOV R7, SP
MOV R16, R4
ADD R16, 13
MOV [R16], SP
MOV R16, R4
ADD R16, 11
MOV R16, [R16]
MUL R16, 512
SUB R16, 1
MOV SP, R16
BACKUP
PUSH EIP
MOV R16, 0
NE R16, EC
JZ R16, _L1
MOV R16, 1
EQ R16, EC
JZ R16, _L3
MOV R16, "illegal instruction"
PORT P1, R16
OUT
MOV R16, EIP
PORT P1, R16
OUT
JMP _L4
_L3:
_L4:
MOV R16, 2
EQ R16, EC
JZ R16, _L5
MOV R16, "illegal memaccess"
PORT P1, R16
OUT
JMP _L6
_L5:
_L6:
MOV R16, 3
EQ R16, EC
JZ R16, _L7
MOV R16, "illegal arithmetic"
PORT P1, R16
OUT
JMP _L8
_L7:
_L8:
MOV R16, PTLR
MUL R16, 512
SUB R16, 1
EQ R16, R7
JZ R16, _L9
MOV R16, "usersp full"
PORT P1, R16
OUT
JMP _L10
_L9:
_L10:
PUSH R10
PUSH R11
PUSH R12
PUSH R13
MOV R1, 3
MOV R2, R3
CALL 21504
POP R13
POP R12
POP R11
POP R10
CALL 25600
JMP _L2
_L1:
_L2:
MOV R16, 0
EQ R16, EC
JZ R16, _L11
MOV R16, 4
LE R16, EPN
MOV R17, 7
GE R17, EPN
MUL R16, R17
JZ R16, _L13
PUSH R10
PUSH R11
PUSH R12
PUSH R13
MOV R1, 5
MOV R16, R5
ADD R16, EPN
MOV R16, [R16]
MOV R2, R16
CALL 22528
POP R13
POP R12
POP R11
POP R10
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 0
MOV [R16], R0
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 1
MOV [R16], "1100"
JMP _L14
_L13:
_L14:
MOV R16, 2
LE R16, EPN
MOV R17, 3
GE R17, EPN
MUL R16, R17
JZ R16, _L15
PUSH R10
PUSH R11
PUSH R12
PUSH R13
MOV R1, 1
CALL 22528
POP R13
POP R12
POP R11
POP R10
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 0
MOV [R16], R0
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 1
MOV [R16], "1110"
PUSH R10
PUSH R11
PUSH R12
PUSH R13
MOV R1, 1
CALL 22528
POP R13
POP R12
POP R11
POP R10
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 2
MOV [R16], R0
MOV R16, EPN
MUL R16, 2
ADD R16, R6
ADD R16, 3
MOV [R16], "1110"
JMP _L16
_L15:
_L16:
MOV R16, R4
ADD R16, 9
MOV [R16], 0
POP EIP
RESTORE
MOV SP, R7
MOV R16, SP
ADD R16, 1
MOV SP, R16
MOV R8, SP
CALL AddrTranslation
MOV [R9], EIP
IRET
JMP _L12
_L11:
_L12:
HALT
AddrTranslation:
MOV R16, R8
DIV R16, 512
MOV R15, R16
MOV R16, 2
MUL R16, R15
ADD R16, PTBR
MOV R16, [R16]
MOV R15, R16
MOV R16, R15
MUL R16, 512
MOV R17, R8
MOD R17, 512
ADD R16, R17
MOV R9, R16
RET
HALT