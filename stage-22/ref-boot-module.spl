loadi(63, 13);   // Library
loadi(64, 14);

loadi(65, 7);   // Init/Login Code
loadi(66, 8);

loadi(22, 35);  // Int=10:Exit
loadi(23, 36);

loadi(2 ,15);  // Exception Handler
loadi(3, 16);

loadi(4, 17);  // Timer Int Routine
loadi(5, 18);

loadi(16, 29);  // Int=7:Write
loadi(17, 30);

loadi(50, 63);  // Mod=5:Scheduler/Context Switch Module
loadi(51, 64);

loadi(40, 53);  // Mod=0:Resource Manager
loadi(41, 54);

loadi(48, 61);  // Mod=4:Device Manager
loadi(49, 62);

loadi(8, 21);  // Console Int Routine
loadi(9, 22);

loadi(14, 27); // Int=6:Read
loadi(15, 28);

loadi(20, 33);  // Int=9:Exec
loadi(21, 34);

loadi(42, 55);  // Mod=1:Process Manager
loadi(43, 56);

loadi(44, 57);  // Mod=2:Memory Manager
loadi(45, 58);

loadi(59, 3);  // Inode + User Table
loadi(60, 4);

loadi(6, 19);  // Disk Controller Interrupt Routine
loadi(7, 20);

loadi(61, 2);  // Disk Free List

loadi(18, 31);  // Int=8:Fork
loadi(19, 32);

loadi(24, 37);  //Int=11:Getpid,Getppid,Wait,Signal
loadi(25, 38);

loadi(32, 45);  //Int=15:Shutdown
loadi(33, 46);

loadi(28, 41);  //Int=13:Semget,Semrelease
loadi(29, 42);

loadi(30, 43);  //Int=14:SemLock,SemUnLock
loadi(31, 44);

[DISK_STATUS_TABLE + 0] = 0; // DISK STATUS = 0
[TERMINAL_STATUS_TABLE + 0] = 0; // TERMINAL STATUS = 0

PTBR = PAGE_TABLE_BASE + 20;
PTLR = 10;

[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

[PROCESS_TABLE + 27] = 80;
[PROCESS_TABLE + 17] = 1;
[PROCESS_TABLE + 20] = CREATED;
[PROCESS_TABLE + 29] = 8*512;
[PROCESS_TABLE + 28] = 0;
[PROCESS_TABLE + 30] = PAGE_TABLE_BASE+20;
[PROCESS_TABLE + 31] = 10;

alias count R0;
count = 2;

while (count < 16) do
	[PROCESS_TABLE + (count*16) + 4] = TERMINATED;
	count = count + 1;
endwhile;

count = 0;
while(count < 83) do
	[MEMORY_FREE_LIST + count] = 1;
	count = count + 1;
endwhile;
while(count < 128) do
	[MEMORY_FREE_LIST + count] = 0;
	count = count + 1;
endwhile;

count = 0;
alias user_page R1;
user_page = [PROCESS_TABLE + 16 + 11];
while(count <= 7) do
	[user_page*512 + 512 - 16 + 2*count] = -1;
	[user_page*512 + 512 - 16 + 2*count + 1] = -1;	
	count = count + 1;
endwhile;

count = 0; // INITIALIZATION OF DISK_MAP_TABLE

while(count <= 9) do
	[DISK_MAP_TABLE+ 10 + count] = -1;
	count = count + 1;
endwhile;

count = 0;
while(count < 32) do
	[SEMAPHORE_TABLE + 4*count + 0] = -1;
	[SEMAPHORE_TABLE + 4*count + 1] = 0;
	count = count + 1;
endwhile;

[SYSTEM_STATUS_TABLE + 3] = 0; // WAIT_MEM_COUNT = 0
[SYSTEM_STATUS_TABLE + 2] = 128 - 83;

[76 * 512] = [65 * 512 + 1];
return;
