loadi(69, 11);
loadi(70, 12); // idle-process

loadi(54, 67);
loadi(55, 68); // loading module 7

// setting SP to (user area page number * 512 - 1) , i.e 82
SP = 82 * 512 - 1;
//;
call BOOT_MODULE;
//;
PTBR = PAGE_TABLE_BASE;  //as PID of idle process is 0
PTLR = 10;
// for idle process
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0000";
[PTBR+6] = -1;
[PTBR+7] = "0000";

//Code
[PTBR+8] = 69;
[PTBR+9] = "0100";
[PTBR+10] = 70;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 81;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0000";


// for idle process - 0
//pid
[PROCESS_TABLE + 1] = 0;
//STATE
[PROCESS_TABLE + 4] = RUNNING;
//UAPN
[PROCESS_TABLE + 11] = 82;
//UPTR
[PROCESS_TABLE + 13] = 8 * 512;
//KPTR
[PROCESS_TABLE + 12] = 0;
//PTBR
[PROCESS_TABLE + 14] = PAGE_TABLE_BASE;
//PTLR
[PROCESS_TABLE + 15] = 10;


PTBR = PAGE_TABLE_BASE;  //as PID of idle process is 0

[81 * 512] = [69 * 512 + 1];
[SYSTEM_STATUS_TABLE + 1] = 0;

SP = 8 * 512;
ireturn;
