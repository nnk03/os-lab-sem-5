loadi(4, 17);
loadi(5, 18);
loadi(65,7);
loadi(66,8);
loadi(63,13);
loadi(64,14);
PTBR = PAGE_TABLE_BASE;
PTLR = 10;
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
SP = 8 * 512;
[76 * 512] = [65 * 512 + 1];
//[PROCESS_TABLE + 11] = 80;
//[PROCESS_TABLE + 1] = 0;
//[SYSTEM_STATUS_TABLE + 1] = 0;
//[PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13] = SP;
// Setting SP to UArea Page number * 512 - 1
//SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 11] * 512 - 1;
//backup;
//print "TIMER from";
//print "stack";
//alias pid R0;
//pid = [SYSTEM_STATUS_TABLE + 1];
//print pid;
//restore;
//SP = [PROCESS_TABLE + ([SYSTEM_STATUS_TABLE + 1] * 16) + 13];

ireturn;
